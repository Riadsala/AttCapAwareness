
R version 3.4.0 (2017-04-21) -- "You Stupid Darkness"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(ggplot2)
> library(dplyr)

Attaching package: 'dplyr'

The following objects are masked from 'package:stats':

    filter, lag

The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union

> # library(tidyr)
> library(scales)
> library(lme4)
Loading required package: Matrix
> # library(brms)
> 
> fDat = read.csv("aoiFixationData.csv")
> rDat = read.csv("responseCapture.csv")
> 
> fDat$observer = as.factor(fDat$observer)
> rDat$observer = as.factor(rDat$observer)
> 
> # reorder factor levels
> rDat$congC = factor(rDat$congC, levels=levels(rDat$congC)[c(3,1,2)])
> 
> # remove incorrect trials
> source("removeBadTrials.R")
> rDat = removeBadTrials(rDat)
          congC targDiscrim
1 no distracter   0.9418860
2     congruent   0.9214181
3   incongruent   0.9060673
   observer targDiscrim
1         1   0.9618056
2         2   0.9710648
3         3   0.9594907
4         5   0.9652778
5         6   0.9293981
6         7   0.9467593
7         8   0.9942130
8         9   0.8333333
9        10   0.9675926
10       12   0.5405093
11       13   0.9756944
12       14   0.9571759
13       15   0.9363426
14       16   0.9791667
15       17   0.9097222
16       18   0.9479167
17       19   0.8275463
18       20   0.9606481
19       21   0.9756944
> 
> ###############################################################
> # back to proper analysis now we've done SPSS output for students
> ###############################################################
> 
> # first look at no-distracter, and congruency RT effects
> aDat = aggregate(RT~observer+congC, rDat, "median")
> plt = ggplot(rDat, aes(x=congC, y=RT)) + geom_violin(fill="#79D0E1", draw_q<congC, y=RT)) + geom_violin(fill="#79D0E1", draw_qu                        antiles=c(0.25,0.5,0.75),<n(fill="#79D0E1", draw_quantiles=c(0.25,0.5,0.75),                         size=0.75)
> plt = plt + geom_point(data=aDat, aes(y=RT), colour="#9A4330", size=0.5)
> plt = plt + geom_path(data=aDat, aes(x=congC, y=RT, group=observer), colour<a=aDat, aes(x=congC, y=RT, group=observer), colour=                        "#9A4330", size=0.25)
> plt = plt + scale_x_discrete(name="distracter congruency")
> plt = plt + scale_y_continuous(name="reaction time (ms)")
> plt = plt + theme_bw()
> 
> ggsave("../graphs/congC_RT.png", width=5, height=5)
> ggsave("../graphs/congC_RT.pdf", width=5, height=5)
> rm(aDat)
> 
> # verify there is a congruency effect
> # only look at distracter trials
> rDat = filter(rDat, distracter==1)
> 
> # m = lmer(data=rDat,RT ~ congC + (congC|observer))
> # ci = confint(m, method="boot")
> # # and vertify using log-transformed RT. 
> # mLog = lmer(data=rDat, log(RT) ~ congC + (congC|observer))
> # ci = confint(mLog, method="boot")
> 
> # now take only trials with a distracer fixation
> rDat = filter(rDat, lookedAtDist)
> 
> # plot distribution of distracter dwell times
> levels(rDat$thought) = c("error", "direct")
> plt = ggplot(rDat , aes(x=distDwell, fill=thought)) + geom_density(alpha=0.<=distDwell, fill=thought)) + geom_density(alpha=0.5                        )
> plt = plt + scale_x_continuous("log(distracter dwell time (ms))", expand=c(<nuous("log(distracter dwell time (ms))", expand=c(0                        ,0), trans=log2_trans(), <l time (ms))", expand=c(0,0), trans=log2_trans(), b                        reaks=c(12.5, 25, 50,100,<0), trans=log2_trans(), breaks=c(12.5, 25, 50,100,                         150, 200, 300,400, 500))
> plt = plt + scale_y_continuous(expand=c(0,0.01))
> plt = plt + theme_bw() + theme(legend.justification=c(1,1), legend.position<theme(legend.justification=c(1,1), legend.position=                        c(1,1))
>  plt <- plt + scale_fill_manual(values=c("grey50", "grey15"))
> # plt = plt + scale_fill_brewer(name="response", direction=-1)
> plt = plt + coord_trans(x="log2")
> ggsave("../graphs/dwellTime.pdf" ,width = 6, height = 4))
Error: unexpected ')' in "ggsave("../graphs/dwellTime.pdf" ,width = 6, height = 4))"
> ggsave("../graphs/dwellTime.png", width = 6, height = 4))
Error: unexpected ')' in "ggsave("../graphs/dwellTime.png", width = 6, height = 4))"
> library(ggplot2)
> library(dplyr)
> # library(tidyr)
> library(scales)
> library(lme4)
> # library(brms)
> 
> fDat = read.csv("aoiFixationData.csv")
> rDat = read.csv("responseCapture.csv")
> 
> fDat$observer = as.factor(fDat$observer)
> rDat$observer = as.factor(rDat$observer)
> 
> # reorder factor levels
> rDat$congC = factor(rDat$congC, levels=levels(rDat$congC)[c(3,1,2)])
> 
> # remove incorrect trials
> source("removeBadTrials.R")
> rDat = removeBadTrials(rDat)
          congC targDiscrim
1 no distracter   0.9418860
2     congruent   0.9214181
3   incongruent   0.9060673
   observer targDiscrim
1         1   0.9618056
2         2   0.9710648
3         3   0.9594907
4         5   0.9652778
5         6   0.9293981
6         7   0.9467593
7         8   0.9942130
8         9   0.8333333
9        10   0.9675926
10       12   0.5405093
11       13   0.9756944
12       14   0.9571759
13       15   0.9363426
14       16   0.9791667
15       17   0.9097222
16       18   0.9479167
17       19   0.8275463
18       20   0.9606481
19       21   0.9756944
> 
> ###############################################################
> # back to proper analysis now we've done SPSS output for students
> ###############################################################
> 
> # first look at no-distracter, and congruency RT effects
> aDat = aggregate(RT~observer+congC, rDat, "median")
> plt = ggplot(rDat, aes(x=congC, y=RT)) + geom_violin(fill="#79D0E1", draw_q<congC, y=RT)) + geom_violin(fill="#79D0E1", draw_qu                        antiles=c(0.25,0.5,0.75),<n(fill="#79D0E1", draw_quantiles=c(0.25,0.5,0.75),                         size=0.75)
> plt = plt + geom_point(data=aDat, aes(y=RT), colour="#9A4330", size=0.5)
> plt = plt + geom_path(data=aDat, aes(x=congC, y=RT, group=observer), colour<a=aDat, aes(x=congC, y=RT, group=observer), colour=                        "#9A4330", size=0.25)
> plt = plt + scale_x_discrete(name="distracter congruency")
> plt = plt + scale_y_continuous(name="reaction time (ms)")
> plt = plt + theme_bw()
> 
> ggsave("../graphs/congC_RT.png", width=5, height=5)
> ggsave("../graphs/congC_RT.pdf", width=5, height=5)
> rm(aDat)
> 
> # verify there is a congruency effect
> # only look at distracter trials
> rDat = filter(rDat, distracter==1)
> 
> # m = lmer(data=rDat,RT ~ congC + (congC|observer))
> # ci = confint(m, method="boot")
> # # and vertify using log-transformed RT. 
> # mLog = lmer(data=rDat, log(RT) ~ congC + (congC|observer))
> # ci = confint(mLog, method="boot")
> 
> # now take only trials with a distracer fixation
> rDat = filter(rDat, lookedAtDist)
> 
> # plot distribution of distracter dwell times
> levels(rDat$thought) = c("error", "direct")
> plt = ggplot(rDat , aes(x=distDwell, fill=thought)) + geom_density(alpha=0.<=distDwell, fill=thought)) + geom_density(alpha=0.5                        )
> plt = plt + scale_x_continuous("log(distracter dwell time (ms))", expand=c(<nuous("log(distracter dwell time (ms))", expand=c(0                        ,0), trans=log2_trans(), <l time (ms))", expand=c(0,0), trans=log2_trans(), b                        reaks=c(12.5, 25, 50,100,<0), trans=log2_trans(), breaks=c(12.5, 25, 50,100,                         150, 200, 300,400, 500))
> plt = plt + scale_y_continuous(expand=c(0,0.01))
> plt = plt + theme_bw() + theme(legend.justification=c(1,1), legend.position<theme(legend.justification=c(1,1), legend.position=                        c(1,1))
>  plt <- plt + scale_fill_manual(values=c("grey50", "grey15"))
> # plt = plt + scale_fill_brewer(name="response", direction=-1)
> plt = plt + coord_trans(x="log2")
> ggsave("../graphs/dwellTime.pdf" ,width = 6, height = 4)
> ggsave("../graphs/dwellTime.png", width = 6, height = 4)
> plt 
> 