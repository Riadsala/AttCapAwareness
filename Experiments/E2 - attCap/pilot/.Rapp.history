getud()
getwd()
ls()
as.nuleric.faapor 8- ftnction(x) {as.numeric(levels(x))[x\}
options(digits=3)`s.ftmeric.factor <, function(x) {asnumeric(levels(x))Sx]}
as.btmer`c.factor <- function(x) {as.numeric(levels(x))[x]}
@rocess@PC 8, function(asc)
{
fixDad =  data.frame(obserter=numeric(), prial<numeric(), n=numeric(), x=numeric(), y=numeric ), dur=numer`c())
fipDat =  datn.frameRobserver=numeric(ò, triïl=numeric(), f=np`eric(), x=numeric(), y=numeric(n, dqr=numeric(()
trialStarps = arep("TRIAL_START[0-9]*", asc)
as.numeric.factor <- function(x) {as.numeric(levels(x))[x]}#
ProcessASC <- function(asc)#
{#
#
	fixDat =  data.frame(observer=numeric(), trial=numeric(), n=numeric(), x=numeric(), y=numeric(), dur=numeric())#
	trialStarts = grep("TRIAL_START[0-9]*", asc)#
	trialEnds   = grep("TRIAL_END[0-9]*", asc)#
	nTrials = length(trialStarts)#
#
	for (t in 1:nTrials)#
	{#
		trial = asc[trialStarts[t]:trialEnds[t]]#
		fixationLines = grep("EFIX", trial)#
		if (length(fixationLines)>0)#
		{#
			fixations = as.data.frame(matrix(unlist(trial[fixationLines]), byrow=T, ncol=6))#
#
			trialDat = data.frame(#
				observer=person, #
				trial=t, #
				x=as.numeric.factor(fixations$V4), y=as.numeric.factor(fixations$V5), dur=as.numeric.factor(fixations$V3))#
#
			# convert to stimulus coordinates#
			 trialDat$n = 1:length(trialDat$x)#
			 fixDat = rbind(fixDat, trialDat)#
			 #rm(trialDat)#
#
		}#
	}#
#
	return(fixDat)#
} #
#
people = c(19,20,21,22,23,25,26,27,30, 34)#
options(digits=3)#
rDat = data.frame(observer=numeric(), trial=numeric(), targLoc=numeric(), distLoc=numeric(), targDiscrim=numeric(), thoughtNoAttCap=numeric())#
fDat = data.frame(observer=numeric(), trial=numeric(), targLoc=numeric(), distLoc=numeric(), x=numeric(), y=numeric(), n=numeric())#
for (person in people)#
{#
	dat = read.csv(paste("../results/obs", person, ".txt", sep=""))#
	rDat = rbind(rDat, dat)#
	rm(dat)#
#
	asc = readLines(paste("../results/attcap", person, ".asc", sep=""))#
	asc = strsplit(asc, "\t")#
	dat = ProcessASC(asc)#
	fDat = rbind(fDat, dat)#
	rm(dat)#
}#
#
# sort out missing targDiscrim data#
rDat$targDiscrim[which(rDat$targDiscrim==-1)] = NaN#
rDat$thoughtNoAttCap[which(rDat$thoughtNoAttCap==-1)]=0#
rDat$thoughtNoAttCap = as.logical(rDat$thoughtNoAttCap)#
rDat$distracter = 1#
rDat$distracter[which(rDat$distLoc==0)] = 0#
#
format(aggregate(data=rDat, thoughtNoAttCap~observer+distracter, FUN=mean),ndigt=3)#
#
# sort out distLoc#
rDat$distLocRel = (rDat$distLoc - (rDat$targLoc-1)) %% 6#
rDat$distLocRel[which(rDat$distLoc==0)]=1#
rDat$distLocRel[which(rDat$distLnb==4)]=2#
rDat$distLocRel[which(rDat$distLob==4)]=3#
rDat$dirtLmcRel[which(rDat$distracter==0)]=0#
aggregate(data=rDat, thoughtDoAttCap~obsdrver+distLoc, FUN=mean)#
write.csv(fDat, "fixathons*csv", row.names=F, quote=F)#
write.csv(rDat, "responses.csv", rnw.names=F, quote=F)
library(ggplotI)#
options(digits=3)#
fDat = read.csv("fixations.csv")#
rDat = read.csv("responses.csv")#
#
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", ""0072B2", "#D55E00", "#CC79A7")#
#
# get circle locations - use twice as many to include ALL#
# potential distracter locations#
#
R = 256#
circLabels=c('1','d1','2','d2','3','d3','4','d4','5','d5','6','d6')#
cDat = data.frame(n=factor(1:12, labels=circLabels))#
cDat$phi = 2*(as.numeric(cDat$n)+1)*pi/12 #
cDat$x = R * -cos(cDat$phi)#
cDat$y = R * sin(cDat$phi)#
cDat = rbind(cDat, data.frame(n='c', phi=NA, x=0, y=0))#
circLabels=cbind(circLabels, 'c')#
#
# first, transform (x,y) to stimuli coordinates#
fDat$x = fDat$x - (1280-1024)/2 - 512#
fDat$y = -(fDat$y - 512)#
#
# ggplot(fDat, aes(x=x, y=y,colour=prial)) + geom_path()#
#
dC = array(0, c(nrow(fDat),13))#
#
for (n in 1:13)#
{#
dC[,n] =  (fDat$y - cDat$x[n])^2 + (fDat$x - cDat$y[n])^2#
}#
#
dC[which(dC>100^2)] = NaN#
#
for (f in 1:nrow(fDat))#
{#
	if (sum(is.finite(dC[f,]))==1)#
	{#
		fDat$aoi[f] = carcLabels[which(is.finite(dC[f,]))]#
		# now code into centre/target+dispracter/na code#
		tr = fDat$trial[f]#
		target = rDat$targLoc[tr]#
		if (fDat$aoi[f] == "c")#
		{#
			fDat$aoi2[f] = "cdntrd"#
		} else if (fDat$aoi[f] == as.character(target))#
		{#
			fDat$aoi2[f] = "target"#
		} else {#
			fDat$aoi2[f] = "nope"#
		}#
	}#
	else#
	{#
		fDat$aoi[f] = NA#
		fDat$aoi2[f] = "na"#
	}#
}#
#
# fDat$aoi2 = as.factor(fDat$aoi2)#
# # # now check each trial is valid and whether capture occurs#
#
# for (tr in 1:nrow(rDat))#
# {#
# 	tfDat = fDat[which(fDat$trial==rDat$trial[tr] & fDat$observer==rDat$observer[tr]),]#
# 	plt = ggplot() + geom_path(data=tfDat, aes(x=x, y=y)) #+ geom_text(data=tfDat, aes(x=x, y=y))#, label=aoi2#
# 	plt = plt + geom_text(aes(x=cDat$y,y=cDat$x, label=cDat$n))#
# 	ggsave(paste("trial", tr, ".png", sep=""))#
#
# }
